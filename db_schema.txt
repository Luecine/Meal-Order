CREATE TABLE ACCOUNT
(
	userId                VARCHAR(20)  NOT NULL ,
	name                  VARCHAR(20)  NULL ,
	userPw                VARCHAR(20)  NOT NULL ,
	userNum               INT  NOT NULL,
	 

    primary key (userId, userNum)
);

CREATE TABLE FINANCE
(
	date                  DATE  NULL ,
	totalProfit           LONG  NULL
);


CREATE TABLE HISTORY
(
	userId                VARCHAR(20)  NOT NULL ,
	userNum               INT  NOT NULL ,
	historyNum	 INT NOT NULL,
	date                  DATE  NULL ,

    primary key(userId, userNum, historyNum),
    constraint idConstraint foreign key(userId, userNum) references ACCOUNT(userId, userNum) on delete cascade
);

CREATE TABLE CART
(
	cartNum              INT  NOT NULL ,
	totalPrice           INT  NULL ,
	userId                VARCHAR(20)  NOT NULL ,
	userNum               INT  NOT NULL,
    primary key(cartNum)
    
);



CREATE TABLE ITEM
(
	name                  VARCHAR(20)  NOT NULL ,
	price                 INT  NOT NULL,

    primary key(name)
);





CREATE TABLE REVIEW
(
	reviewNum             INT NOT NULL AUTO_INCREMENT,
	userId                VARCHAR(20)  NOT NULL ,
	userNum               INT  NOT NULL ,
	historyNum	 INT NOT NULL,
	content               VARCHAR(100)  NOT NULL ,
	date                  DATE  NULL ,
	rate                  INT  NULL,

    primary key(reviewNum, userId, userNum, historyNum),
    constraint reviewConstraint foreign key(userId, userNum, historyNum) references HISTORY(userId, userNum, historyNum) on delete cascade
);

CREATE TABLE NOTIFICATION
(
	notiNum             INT NOT NULL AUTO_INCREMENT,
	title                     VARCHAR(20)  NOT NULL ,
	content                VARCHAR(100)  NOT NULL ,
	date              	  DATE  NULL ,
 
    primary key(notiNum)
);

create table temp_cart(name varchar(20), price int, number int);

CREATE table temp_history (
       userId      VARCHAR(20),
       date        TEXT,
       content      VARCHAR(100),
       totalPrice    INT,
        restaurantId TEXT);


CREATE table temp_review (
      resBlock      TEXT,
      userId      VARCHAR(20),
       rate    INT,
       comment    VARCHAR(100)
);

CREATE TABLE Manager
(
	managerId                VARCHAR(20)  NOT NULL ,
	name              		 VARCHAR(20)  NULL ,
	managerPw                VARCHAR(20)  NOT NULL ,
	managerNum               INT  NOT NULL auto_increment,

    primary key (managerId, managerNum),
	unique(managerNum)
);




INSERT INTO Manager (managerId, name, managerPw) VALUES
(
	"skyss123",
	"Lee",
	"qwer"
)